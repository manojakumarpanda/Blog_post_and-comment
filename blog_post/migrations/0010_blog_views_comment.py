# Generated by Django 2.1.7 on 2020-05-11 12:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blog_post', '0009_auto_20200509_2255'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog_Views',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_view', models.IntegerField(default=0)),
                ('view_at', models.DateTimeField(auto_now=True)),
                ('blog_view', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_post.Blog_post', verbose_name='Viewed_by')),
                ('user', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Blog_View',
                'ordering': ['view_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('blog_id', models.AutoField(primary_key=True, serialize=False)),
                ('comments', models.CharField(max_length=300)),
                ('likes', models.IntegerField(default=0, verbose_name='likes')),
                ('shares', models.IntegerField(default=0, verbose_name='shard')),
                ('comented_on', models.DateTimeField(auto_now_add=True)),
                ('blog_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_post.Blog_post', verbose_name='To blog')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_post.Comment', verbose_name='Replayed to')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='comment by')),
            ],
            options={
                'db_table': 'Comments',
                'ordering': ['comented_on'],
            },
        ),
    ]
